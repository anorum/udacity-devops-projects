version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build the frontend
          command: |
            cd frontend
            npm i
            npm run build
      - save_cache:
          key: frontend-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build the backend
          command: |
            cd backend
            npm i
            npm run build
      - save_cache:
          key: backend-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: 
            - frontend-{{ checksum "package-lock.json" }}
            - frontend-
      - run:
          name: Install dependencies for test
          command: |
            cd frontend
            npm i
      - run:
          name: Test the Frontend
            command: npm run test
      - store_test_results:
          path: ./frontend/coverage/


  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
        keys: 
          - backend-{{ checksum "package-lock.json" }}
          - backend-
      - run:
          name: Install dependencies for backend
          command: |
            cd backend
            npm i
      - run:
          name: Test the backend
          command: npm run test
      - store_test_results:
          path: ./backend/coverage/

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Scan the frontend
          command: |
            cd frontend
            npm i
            npm audit fix --audit-level=critical
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Scan the backend
          command: |
            cd backend
            npm i
            npm audit fix --audit-level=critical

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:  

#  smoke-test:

#  cloudfront-update:

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: 
            - build-frontend
      - test-backend:
          requires: 
            - build-backend
      - scan-frontend:
          requires: 
            - build-frontend
      - scan-backend:
          requires: 
            - build-backend
